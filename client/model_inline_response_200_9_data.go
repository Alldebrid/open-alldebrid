/*
Alldebrid API

Welcome to the OpenAPI Alldebrid API v4 !<br /> You can use this API to access various Alldebrid services from custom applications or scripts.<br /> <br /> API is organized around REST,<br /> returns JSON-encoded responses and use standard HTTP response codes.<br /> <br /> All calls are to be made on the HTTPS endpoints.<br /> Some are public, others require to be authentificated with an apikey (see Authentication).<br /> <br /> You must also identify your apps or script with a meaningfull agent parameter.<br /> <br /> This API version is namespaced as v4, as such all endpoint start with /v4/,<br /> such like http://api.alldebrid.com/v4/ping?agent=apiShowcase.<br /> <br /> This API v4 should be the final version regarding general response format and errors (hopefully).<br />

API version: 4.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse2009Data struct for InlineResponse2009Data
type InlineResponse2009Data struct {
	Status *int64 `json:"status,omitempty"`
	TimeLeft *int64 `json:"time_left,omitempty"`
	Link *string `json:"link,omitempty"`
}

// NewInlineResponse2009Data instantiates a new InlineResponse2009Data object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2009Data() *InlineResponse2009Data {
	this := InlineResponse2009Data{}
	return &this
}

// NewInlineResponse2009DataWithDefaults instantiates a new InlineResponse2009Data object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2009DataWithDefaults() *InlineResponse2009Data {
	this := InlineResponse2009Data{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse2009Data) GetStatus() int64 {
	if o == nil || o.Status == nil {
		var ret int64
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2009Data) GetStatusOk() (*int64, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse2009Data) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int64 and assigns it to the Status field.
func (o *InlineResponse2009Data) SetStatus(v int64) {
	o.Status = &v
}

// GetTimeLeft returns the TimeLeft field value if set, zero value otherwise.
func (o *InlineResponse2009Data) GetTimeLeft() int64 {
	if o == nil || o.TimeLeft == nil {
		var ret int64
		return ret
	}
	return *o.TimeLeft
}

// GetTimeLeftOk returns a tuple with the TimeLeft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2009Data) GetTimeLeftOk() (*int64, bool) {
	if o == nil || o.TimeLeft == nil {
		return nil, false
	}
	return o.TimeLeft, true
}

// HasTimeLeft returns a boolean if a field has been set.
func (o *InlineResponse2009Data) HasTimeLeft() bool {
	if o != nil && o.TimeLeft != nil {
		return true
	}

	return false
}

// SetTimeLeft gets a reference to the given int64 and assigns it to the TimeLeft field.
func (o *InlineResponse2009Data) SetTimeLeft(v int64) {
	o.TimeLeft = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *InlineResponse2009Data) GetLink() string {
	if o == nil || o.Link == nil {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2009Data) GetLinkOk() (*string, bool) {
	if o == nil || o.Link == nil {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *InlineResponse2009Data) HasLink() bool {
	if o != nil && o.Link != nil {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *InlineResponse2009Data) SetLink(v string) {
	o.Link = &v
}

func (o InlineResponse2009Data) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.TimeLeft != nil {
		toSerialize["time_left"] = o.TimeLeft
	}
	if o.Link != nil {
		toSerialize["link"] = o.Link
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2009Data struct {
	value *InlineResponse2009Data
	isSet bool
}

func (v NullableInlineResponse2009Data) Get() *InlineResponse2009Data {
	return v.value
}

func (v *NullableInlineResponse2009Data) Set(val *InlineResponse2009Data) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2009Data) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2009Data) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2009Data(val *InlineResponse2009Data) *NullableInlineResponse2009Data {
	return &NullableInlineResponse2009Data{value: val, isSet: true}
}

func (v NullableInlineResponse2009Data) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2009Data) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



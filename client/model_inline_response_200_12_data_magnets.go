/*
Alldebrid API

Welcome to the OpenAPI Alldebrid API v4 !<br /> You can use this API to access various Alldebrid services from custom applications or scripts.<br /> <br /> API is organized around REST,<br /> returns JSON-encoded responses and use standard HTTP response codes.<br /> <br /> All calls are to be made on the HTTPS endpoints.<br /> Some are public, others require to be authentificated with an apikey (see Authentication).<br /> <br /> You must also identify your apps or script with a meaningfull agent parameter.<br /> <br /> This API version is namespaced as v4, as such all endpoint start with /v4/,<br /> such like http://api.alldebrid.com/v4/ping?agent=apiShowcase.<br /> <br /> This API v4 should be the final version regarding general response format and errors (hopefully).<br />

API version: 4.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20012DataMagnets struct for InlineResponse20012DataMagnets
type InlineResponse20012DataMagnets struct {
	Id *int64 `json:"id,omitempty"`
	Filename *string `json:"filename,omitempty"`
	Size *int64 `json:"size,omitempty"`
	Status *string `json:"status,omitempty"`
	StatusCode *int64 `json:"statusCode,omitempty"`
	Downloaded *int64 `json:"downloaded,omitempty"`
	Uploaded *int64 `json:"uploaded,omitempty"`
	Seeders *int64 `json:"seeders,omitempty"`
	DownloadSpeed *int64 `json:"downloadSpeed,omitempty"`
	UploadSpeed *int64 `json:"uploadSpeed,omitempty"`
	UploadDate *int64 `json:"uploadDate,omitempty"`
	CompletionDate *int64 `json:"completionDate,omitempty"`
	Links *[]InlineResponse20012DataLinks `json:"links,omitempty"`
}

// NewInlineResponse20012DataMagnets instantiates a new InlineResponse20012DataMagnets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20012DataMagnets() *InlineResponse20012DataMagnets {
	this := InlineResponse20012DataMagnets{}
	return &this
}

// NewInlineResponse20012DataMagnetsWithDefaults instantiates a new InlineResponse20012DataMagnets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20012DataMagnetsWithDefaults() *InlineResponse20012DataMagnets {
	this := InlineResponse20012DataMagnets{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20012DataMagnets) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012DataMagnets) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20012DataMagnets) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InlineResponse20012DataMagnets) SetId(v int64) {
	o.Id = &v
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *InlineResponse20012DataMagnets) GetFilename() string {
	if o == nil || o.Filename == nil {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012DataMagnets) GetFilenameOk() (*string, bool) {
	if o == nil || o.Filename == nil {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *InlineResponse20012DataMagnets) HasFilename() bool {
	if o != nil && o.Filename != nil {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *InlineResponse20012DataMagnets) SetFilename(v string) {
	o.Filename = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *InlineResponse20012DataMagnets) GetSize() int64 {
	if o == nil || o.Size == nil {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012DataMagnets) GetSizeOk() (*int64, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *InlineResponse20012DataMagnets) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *InlineResponse20012DataMagnets) SetSize(v int64) {
	o.Size = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse20012DataMagnets) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012DataMagnets) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse20012DataMagnets) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse20012DataMagnets) SetStatus(v string) {
	o.Status = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *InlineResponse20012DataMagnets) GetStatusCode() int64 {
	if o == nil || o.StatusCode == nil {
		var ret int64
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012DataMagnets) GetStatusCodeOk() (*int64, bool) {
	if o == nil || o.StatusCode == nil {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *InlineResponse20012DataMagnets) HasStatusCode() bool {
	if o != nil && o.StatusCode != nil {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int64 and assigns it to the StatusCode field.
func (o *InlineResponse20012DataMagnets) SetStatusCode(v int64) {
	o.StatusCode = &v
}

// GetDownloaded returns the Downloaded field value if set, zero value otherwise.
func (o *InlineResponse20012DataMagnets) GetDownloaded() int64 {
	if o == nil || o.Downloaded == nil {
		var ret int64
		return ret
	}
	return *o.Downloaded
}

// GetDownloadedOk returns a tuple with the Downloaded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012DataMagnets) GetDownloadedOk() (*int64, bool) {
	if o == nil || o.Downloaded == nil {
		return nil, false
	}
	return o.Downloaded, true
}

// HasDownloaded returns a boolean if a field has been set.
func (o *InlineResponse20012DataMagnets) HasDownloaded() bool {
	if o != nil && o.Downloaded != nil {
		return true
	}

	return false
}

// SetDownloaded gets a reference to the given int64 and assigns it to the Downloaded field.
func (o *InlineResponse20012DataMagnets) SetDownloaded(v int64) {
	o.Downloaded = &v
}

// GetUploaded returns the Uploaded field value if set, zero value otherwise.
func (o *InlineResponse20012DataMagnets) GetUploaded() int64 {
	if o == nil || o.Uploaded == nil {
		var ret int64
		return ret
	}
	return *o.Uploaded
}

// GetUploadedOk returns a tuple with the Uploaded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012DataMagnets) GetUploadedOk() (*int64, bool) {
	if o == nil || o.Uploaded == nil {
		return nil, false
	}
	return o.Uploaded, true
}

// HasUploaded returns a boolean if a field has been set.
func (o *InlineResponse20012DataMagnets) HasUploaded() bool {
	if o != nil && o.Uploaded != nil {
		return true
	}

	return false
}

// SetUploaded gets a reference to the given int64 and assigns it to the Uploaded field.
func (o *InlineResponse20012DataMagnets) SetUploaded(v int64) {
	o.Uploaded = &v
}

// GetSeeders returns the Seeders field value if set, zero value otherwise.
func (o *InlineResponse20012DataMagnets) GetSeeders() int64 {
	if o == nil || o.Seeders == nil {
		var ret int64
		return ret
	}
	return *o.Seeders
}

// GetSeedersOk returns a tuple with the Seeders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012DataMagnets) GetSeedersOk() (*int64, bool) {
	if o == nil || o.Seeders == nil {
		return nil, false
	}
	return o.Seeders, true
}

// HasSeeders returns a boolean if a field has been set.
func (o *InlineResponse20012DataMagnets) HasSeeders() bool {
	if o != nil && o.Seeders != nil {
		return true
	}

	return false
}

// SetSeeders gets a reference to the given int64 and assigns it to the Seeders field.
func (o *InlineResponse20012DataMagnets) SetSeeders(v int64) {
	o.Seeders = &v
}

// GetDownloadSpeed returns the DownloadSpeed field value if set, zero value otherwise.
func (o *InlineResponse20012DataMagnets) GetDownloadSpeed() int64 {
	if o == nil || o.DownloadSpeed == nil {
		var ret int64
		return ret
	}
	return *o.DownloadSpeed
}

// GetDownloadSpeedOk returns a tuple with the DownloadSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012DataMagnets) GetDownloadSpeedOk() (*int64, bool) {
	if o == nil || o.DownloadSpeed == nil {
		return nil, false
	}
	return o.DownloadSpeed, true
}

// HasDownloadSpeed returns a boolean if a field has been set.
func (o *InlineResponse20012DataMagnets) HasDownloadSpeed() bool {
	if o != nil && o.DownloadSpeed != nil {
		return true
	}

	return false
}

// SetDownloadSpeed gets a reference to the given int64 and assigns it to the DownloadSpeed field.
func (o *InlineResponse20012DataMagnets) SetDownloadSpeed(v int64) {
	o.DownloadSpeed = &v
}

// GetUploadSpeed returns the UploadSpeed field value if set, zero value otherwise.
func (o *InlineResponse20012DataMagnets) GetUploadSpeed() int64 {
	if o == nil || o.UploadSpeed == nil {
		var ret int64
		return ret
	}
	return *o.UploadSpeed
}

// GetUploadSpeedOk returns a tuple with the UploadSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012DataMagnets) GetUploadSpeedOk() (*int64, bool) {
	if o == nil || o.UploadSpeed == nil {
		return nil, false
	}
	return o.UploadSpeed, true
}

// HasUploadSpeed returns a boolean if a field has been set.
func (o *InlineResponse20012DataMagnets) HasUploadSpeed() bool {
	if o != nil && o.UploadSpeed != nil {
		return true
	}

	return false
}

// SetUploadSpeed gets a reference to the given int64 and assigns it to the UploadSpeed field.
func (o *InlineResponse20012DataMagnets) SetUploadSpeed(v int64) {
	o.UploadSpeed = &v
}

// GetUploadDate returns the UploadDate field value if set, zero value otherwise.
func (o *InlineResponse20012DataMagnets) GetUploadDate() int64 {
	if o == nil || o.UploadDate == nil {
		var ret int64
		return ret
	}
	return *o.UploadDate
}

// GetUploadDateOk returns a tuple with the UploadDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012DataMagnets) GetUploadDateOk() (*int64, bool) {
	if o == nil || o.UploadDate == nil {
		return nil, false
	}
	return o.UploadDate, true
}

// HasUploadDate returns a boolean if a field has been set.
func (o *InlineResponse20012DataMagnets) HasUploadDate() bool {
	if o != nil && o.UploadDate != nil {
		return true
	}

	return false
}

// SetUploadDate gets a reference to the given int64 and assigns it to the UploadDate field.
func (o *InlineResponse20012DataMagnets) SetUploadDate(v int64) {
	o.UploadDate = &v
}

// GetCompletionDate returns the CompletionDate field value if set, zero value otherwise.
func (o *InlineResponse20012DataMagnets) GetCompletionDate() int64 {
	if o == nil || o.CompletionDate == nil {
		var ret int64
		return ret
	}
	return *o.CompletionDate
}

// GetCompletionDateOk returns a tuple with the CompletionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012DataMagnets) GetCompletionDateOk() (*int64, bool) {
	if o == nil || o.CompletionDate == nil {
		return nil, false
	}
	return o.CompletionDate, true
}

// HasCompletionDate returns a boolean if a field has been set.
func (o *InlineResponse20012DataMagnets) HasCompletionDate() bool {
	if o != nil && o.CompletionDate != nil {
		return true
	}

	return false
}

// SetCompletionDate gets a reference to the given int64 and assigns it to the CompletionDate field.
func (o *InlineResponse20012DataMagnets) SetCompletionDate(v int64) {
	o.CompletionDate = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *InlineResponse20012DataMagnets) GetLinks() []InlineResponse20012DataLinks {
	if o == nil || o.Links == nil {
		var ret []InlineResponse20012DataLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012DataMagnets) GetLinksOk() (*[]InlineResponse20012DataLinks, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *InlineResponse20012DataMagnets) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []InlineResponse20012DataLinks and assigns it to the Links field.
func (o *InlineResponse20012DataMagnets) SetLinks(v []InlineResponse20012DataLinks) {
	o.Links = &v
}

func (o InlineResponse20012DataMagnets) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Filename != nil {
		toSerialize["filename"] = o.Filename
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusCode != nil {
		toSerialize["statusCode"] = o.StatusCode
	}
	if o.Downloaded != nil {
		toSerialize["downloaded"] = o.Downloaded
	}
	if o.Uploaded != nil {
		toSerialize["uploaded"] = o.Uploaded
	}
	if o.Seeders != nil {
		toSerialize["seeders"] = o.Seeders
	}
	if o.DownloadSpeed != nil {
		toSerialize["downloadSpeed"] = o.DownloadSpeed
	}
	if o.UploadSpeed != nil {
		toSerialize["uploadSpeed"] = o.UploadSpeed
	}
	if o.UploadDate != nil {
		toSerialize["uploadDate"] = o.UploadDate
	}
	if o.CompletionDate != nil {
		toSerialize["completionDate"] = o.CompletionDate
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20012DataMagnets struct {
	value *InlineResponse20012DataMagnets
	isSet bool
}

func (v NullableInlineResponse20012DataMagnets) Get() *InlineResponse20012DataMagnets {
	return v.value
}

func (v *NullableInlineResponse20012DataMagnets) Set(val *InlineResponse20012DataMagnets) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20012DataMagnets) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20012DataMagnets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20012DataMagnets(val *InlineResponse20012DataMagnets) *NullableInlineResponse20012DataMagnets {
	return &NullableInlineResponse20012DataMagnets{value: val, isSet: true}
}

func (v NullableInlineResponse20012DataMagnets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20012DataMagnets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


